// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditChannelInfo create - should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
      "left",
      "right",
    ]
  }
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="always"
    keyboardSpace={0}
    onKeyboardDidHide={[Function]}
    onKeyboardDidShow={[Function]}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    testID="edit_channel_info"
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(63,67,80,0.06)",
            "flex": 1,
            "paddingTop": 30,
          }
        }
      >
        <View>
          <View>
            <Text
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "marginLeft": 15,
                }
              }
            >
              Type
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "marginTop": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="edit_channel_info.type.public.action"
            >
              <Text
                style={
                  Object {
                    "color": "#3f4350",
                    "flex": 1,
                    "flexGrow": 1,
                    "fontSize": 16,
                    "lineHeight": 24,
                    "marginLeft": 15,
                    "paddingVertical": 10,
                  }
                }
              >
                Public Channel
              </Text>
            </View>
            <View
              style={
                Object {
                  "borderBottomColor": "rgba(63,67,80,0.1)",
                  "borderBottomWidth": 1,
                  "height": 0,
                  "marginHorizontal": 15,
                }
              }
            />
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="edit_channel_info.type.private.action"
            >
              <Text
                style={
                  Object {
                    "color": "#3f4350",
                    "flex": 1,
                    "flexGrow": 1,
                    "fontSize": 16,
                    "lineHeight": 24,
                    "marginLeft": 15,
                    "paddingVertical": 10,
                  }
                }
              >
                Private Channel
              </Text>
            </View>
          </View>
        </View>
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginTop": 30,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "marginLeft": 15,
                }
              }
            >
              Name
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "marginTop": 10,
              }
            }
          >
            <TextInput
              autoCapitalize="none"
              autoCorrect={false}
              disableFullscreenUI={true}
              keyboardAppearance="light"
              maxLength={64}
              onChangeText={[Function]}
              placeholder="E.g.: \\"Bugs\\", \\"Marketing\\", \\"客户支持\\""
              placeholderTextColor="rgba(63,67,80,0.5)"
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "height": 40,
                  "paddingHorizontal": 15,
                }
              }
              testID="edit_channel_info.displayname.input"
              underlineColorAndroid="transparent"
              value="orig_display_name"
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginTop": 30,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "marginLeft": 15,
                }
              }
            >
              Purpose
            </Text>
            <Text
              style={
                Object {
                  "color": "rgba(63,67,80,0.5)",
                  "fontSize": 14,
                  "marginLeft": 5,
                }
              }
            >
              (optional)
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "marginTop": 10,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCorrect={false}
              blurOnSubmit={false}
              disableFullscreenUI={true}
              keyboardAppearance="light"
              multiline={true}
              onChangeText={[Function]}
              placeholder="E.g.: \\"A channel to file bugs and improvements\\""
              placeholderTextColor="rgba(63,67,80,0.5)"
              style={
                Array [
                  Object {
                    "color": "#3f4350",
                    "fontSize": 14,
                    "height": 40,
                    "paddingHorizontal": 15,
                  },
                  Object {
                    "height": 110,
                  },
                ]
              }
              testID="edit_channel_info.purpose.input"
              textAlignVertical="top"
              underlineColorAndroid="transparent"
              value="orig_purpose"
            />
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "rgba(63,67,80,0.5)",
                  "fontSize": 14,
                  "marginHorizontal": 15,
                  "marginTop": 10,
                }
              }
            >
              Describe how this channel should be used.
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "marginTop": 15,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#3f4350",
                "fontSize": 14,
                "marginLeft": 15,
              }
            }
          >
            Header
          </Text>
          <Text
            style={
              Object {
                "color": "rgba(63,67,80,0.5)",
                "fontSize": 14,
                "marginLeft": 5,
              }
            }
          >
            (optional)
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#ffffff",
              "marginTop": 10,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            autoCorrect={false}
            blurOnSubmit={false}
            disableFullscreenUI={true}
            keyboardAppearance="light"
            multiline={true}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="E.g.: \\"[Link Title](http://example.com)\\""
            placeholderTextColor="rgba(63,67,80,0.5)"
            style={
              Array [
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "height": 40,
                  "paddingHorizontal": 15,
                },
                Object {
                  "height": 110,
                },
              ]
            }
            testID="edit_channel_info.header.input"
            textAlignVertical="top"
            underlineColorAndroid="transparent"
            value="orig_header"
          />
        </View>
        <View
          style={
            Object {
              "zIndex": -1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgba(63,67,80,0.5)",
                "fontSize": 14,
                "marginHorizontal": 15,
                "marginTop": 10,
              }
            }
          >
            Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`EditChannelInfo edit - should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
      "left",
      "right",
    ]
  }
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="always"
    keyboardSpace={0}
    onKeyboardDidHide={[Function]}
    onKeyboardDidShow={[Function]}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    testID="edit_channel_info"
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(63,67,80,0.06)",
            "flex": 1,
            "paddingTop": 30,
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginTop": 30,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "marginLeft": 15,
                }
              }
            >
              Name
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "marginTop": 10,
              }
            }
          >
            <TextInput
              autoCapitalize="none"
              autoCorrect={false}
              disableFullscreenUI={true}
              keyboardAppearance="light"
              maxLength={64}
              onChangeText={[Function]}
              placeholder="E.g.: \\"Bugs\\", \\"Marketing\\", \\"客户支持\\""
              placeholderTextColor="rgba(63,67,80,0.5)"
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "height": 40,
                  "paddingHorizontal": 15,
                }
              }
              testID="edit_channel_info.displayname.input"
              underlineColorAndroid="transparent"
              value="orig_display_name"
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginTop": 30,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "marginLeft": 15,
                }
              }
            >
              Purpose
            </Text>
            <Text
              style={
                Object {
                  "color": "rgba(63,67,80,0.5)",
                  "fontSize": 14,
                  "marginLeft": 5,
                }
              }
            >
              (optional)
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "marginTop": 10,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCorrect={false}
              blurOnSubmit={false}
              disableFullscreenUI={true}
              keyboardAppearance="light"
              multiline={true}
              onChangeText={[Function]}
              placeholder="E.g.: \\"A channel to file bugs and improvements\\""
              placeholderTextColor="rgba(63,67,80,0.5)"
              style={
                Array [
                  Object {
                    "color": "#3f4350",
                    "fontSize": 14,
                    "height": 40,
                    "paddingHorizontal": 15,
                  },
                  Object {
                    "height": 110,
                  },
                ]
              }
              testID="edit_channel_info.purpose.input"
              textAlignVertical="top"
              underlineColorAndroid="transparent"
              value="orig_purpose"
            />
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "rgba(63,67,80,0.5)",
                  "fontSize": 14,
                  "marginHorizontal": 15,
                  "marginTop": 10,
                }
              }
            >
              Describe how this channel should be used.
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "marginTop": 15,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#3f4350",
                "fontSize": 14,
                "marginLeft": 15,
              }
            }
          >
            Header
          </Text>
          <Text
            style={
              Object {
                "color": "rgba(63,67,80,0.5)",
                "fontSize": 14,
                "marginLeft": 5,
              }
            }
          >
            (optional)
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#ffffff",
              "marginTop": 10,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            autoCorrect={false}
            blurOnSubmit={false}
            disableFullscreenUI={true}
            keyboardAppearance="light"
            multiline={true}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="E.g.: \\"[Link Title](http://example.com)\\""
            placeholderTextColor="rgba(63,67,80,0.5)"
            style={
              Array [
                Object {
                  "color": "#3f4350",
                  "fontSize": 14,
                  "height": 40,
                  "paddingHorizontal": 15,
                },
                Object {
                  "height": 110,
                },
              ]
            }
            testID="edit_channel_info.header.input"
            textAlignVertical="top"
            underlineColorAndroid="transparent"
            value="orig_header"
          />
        </View>
        <View
          style={
            Object {
              "zIndex": -1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgba(63,67,80,0.5)",
                "fontSize": 14,
                "marginHorizontal": 15,
                "marginTop": 10,
              }
            }
          >
            Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
